---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Disable swap
    command: swapoff -a

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl
    register: installed

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{ node_ip }}" --apiserver-cert-extra-sans="{{ node_ip }}"  --node-name master --pod-network-cidr=192.168.0.0/16
    when: installed is changed

  - name: Create .kube folder
    become: false
    file:
      path: /home/vagrant/.kube
      state: directory

  - name: Copy admin.conf file
    copy: remote_src=True src=/etc/kubernetes/admin.conf dest=/home/vagrant/.kube/config

  - name: Change admin.conf owner
    file:
      path: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant

  - name: Install calico pod network
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml

  - name: Set FELIX_IGNORELOOSERPF=true so that calico works
    become: false
    command: kubectl -n kube-system set env daemonset/calico-node FELIX_IGNORELOOSERPF=true

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Create tmp directory if it does not exist
    file:
      path: "./tmp"
      state: directory
      mode: '0755'
    become: false
    delegate_to: localhost
    
  - name: Copy join command to local file
    copy:
      dest: "./tmp/join"
      content: "{{ join_command.stdout_lines[0] }}"
    become: false
    delegate_to: localhost

  handlers:
      - name: docker status
        service: name=docker state=started
